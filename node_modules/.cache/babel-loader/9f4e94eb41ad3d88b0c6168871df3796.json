{"ast":null,"code":"var _jsxFileName = \"/home/shubhang/Desktop/ap/Final-Project/src/App.js\";\nimport React, { Component, useRef } from 'react';\nimport { get } from '@tonaljs/note';\nimport Guitar, { getRenderFingerSpn, fromMidiSharps } from \"react-guitar\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const parse = string => {\n  return string.split(' ').map(name => {\n    var _get$midi, _get$chroma;\n\n    return (_get$midi = get(name).midi) !== null && _get$midi !== void 0 ? _get$midi : ((_get$chroma = get(name).chroma) !== null && _get$chroma !== void 0 ? _get$chroma : 0) + 12 * 3;\n  }).reverse();\n};\nlet tunings = parse('E2 A2 D3 G3 B3 E4');\nlet strings = [[-1, -1, 7, 6, 5, 0], [0, 0, 1, 4, 2, 3], [0, 0, 1, 4, 2, 3]];\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"image\", {\n              src: \"lol.png\",\n              width: \"300\",\n              height: \"150\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: strings.map(string => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(Guitar, {\n                  strings: string,\n                  renderFinger: getRenderFingerSpn(tunings)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this)\n            }, void 0, false))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false) // document.getElementById(\"root\")\n    ;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/shubhang/Desktop/ap/Final-Project/src/App.js"],"names":["React","Component","useRef","get","Guitar","getRenderFingerSpn","fromMidiSharps","parse","string","split","map","name","midi","chroma","reverse","tunings","strings","App","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAwC,OAAxC;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAOC,MAAP,IAAiBC,kBAAjB,EAAqCC,cAArC,QAA2D,cAA3D;AACA,OAAO,WAAP;AACA,OAAO,sCAAP;;;AAGA,OAAO,MAAMC,KAAK,GAAIC,MAAD,IAAY;AAC/B,SAAOA,MAAM,CACVC,KADI,CACE,GADF,EAEJC,GAFI,CAECC,IAAD;AAAA;;AAAA,wBAAUR,GAAG,CAACQ,IAAD,CAAH,CAAUC,IAApB,iDAA4B,gBAACT,GAAG,CAACQ,IAAD,CAAH,CAAUE,MAAX,qDAAqB,CAArB,IAA0B,KAAK,CAA3D;AAAA,GAFA,EAGJC,OAHI,EAAP;AAID,CALM;AAMP,IAAIC,OAAO,GAAGR,KAAK,CAAC,mBAAD,CAAnB;AACA,IAAIS,OAAO,GAAG,CAAC,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAD,EAAuB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAvB,EAA2C,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAA3C,CAAd;;AACA,MAAMC,GAAN,SAAkBhB,SAAlB,CAA4B;AAI1BiB,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACA;AAAO,cAAA,GAAG,EAAC,SAAX;AAAqB,cAAA,KAAK,EAAC,KAA3B;AAAiC,cAAA,MAAM,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,sBACGF,OAAO,CAACN,GAAR,CAAaF,MAAD,iBACX;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,KAAf;AAAA,uCACE,QAAC,MAAD;AACE,kBAAA,OAAO,EAAEA,MADX;AAEE,kBAAA,YAAY,EAAEH,kBAAkB,CAACU,OAAD;AAFlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,6BADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF,CA0BE;AA1BF;AA6BD;;AAnCyB;;AAwC5B,eAAeE,GAAf","sourcesContent":["import React, { Component ,useRef} from 'react';\nimport { get } from '@tonaljs/note'\nimport Guitar, { getRenderFingerSpn, fromMidiSharps } from \"react-guitar\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport const parse = (string) => {\n  return string\n    .split(' ')\n    .map((name) => get(name).midi ?? (get(name).chroma ?? 0) + 12 * 3)\n    .reverse()\n}\nlet tunings = parse('E2 A2 D3 G3 B3 E4')\nlet strings = [[-1, -1, 7, 6, 5, 0], [0, 0, 1, 4, 2, 3], [0, 0, 1, 4, 2, 3]]\nclass App extends Component {\n\n\n\n  render() {\n\n    return (\n      <>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"container\"> \n            <image src=\"lol.png\" width=\"300\" height=\"150\"/>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"container\">\n              {strings.map((string) => (\n                <>\n                  <div className=\"row\">\n                    <Guitar\n                      strings={string}\n                      renderFinger={getRenderFingerSpn(tunings)}\n                    />\n                  </div>\n                </>\n              ))}\n            </div>\n          </div>\n        </div>\n      </>\n\n\n      // document.getElementById(\"root\")\n\n    );\n  }\n\n\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}